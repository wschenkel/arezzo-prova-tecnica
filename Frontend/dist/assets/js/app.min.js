(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _header = _interopRequireDefault(require("../src/materials/components/header/header.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var App = /*#__PURE__*/function () {
  function App() {
    var _this = this;

    _classCallCheck(this, App);

    new _header["default"]();
    var responseProducts = this.getProducts();
    this.orderProducts('highest', responseProducts);
    var selOrder = document.getElementsByClassName('selOrderProducts')[0];
    selOrder.addEventListener('change', function () {
      _this.orderProducts(selOrder.value, responseProducts);
    });
  }

  _createClass(App, [{
    key: "orderProducts",
    value: function orderProducts(selValue, products) {
      switch (selValue) {
        case 'highest':
          // maior valor
          this.orderByhighest(products);
          break;

        case 'lowest':
          // menor valor
          this.orderByLowest(products);
          break;

        case 'orderly':
          // A-Z
          this.orderByOrderly(products);
          break;

        case 'inordinate':
          // Z-A
          console.log('A-Z');
          this.orderByInordinate(products);
          break;

        default:
          console.log("Valor de ordena\xE7\xE3o n\xE3o encontrado. ".concat(selValue));
      }
    }
  }, {
    key: "orderByhighest",
    value: function orderByhighest(products) {
      var orderProducts = products.sort(function (a, b) {
        return parseFloat(a.price) - parseFloat(b.price);
      }).reverse();
      this.listBuilder(orderProducts);
    }
  }, {
    key: "orderByLowest",
    value: function orderByLowest(products) {
      var orderProducts = products.sort(function (a, b) {
        return parseFloat(a.price) - parseFloat(b.price);
      });
      this.listBuilder(orderProducts);
    }
  }, {
    key: "orderByOrderly",
    value: function orderByOrderly(products) {
      // A-Z
      var orderProducts = products.sort(function (a, b) {
        return a.name.localeCompare(b.name);
      });
      this.listBuilder(orderProducts);
    }
  }, {
    key: "orderByInordinate",
    value: function orderByInordinate(products) {
      // Z-A
      var orderProducts = products.sort(function (a, b) {
        return b.name.localeCompare(a.name);
      });
      this.listBuilder(orderProducts);
    }
  }, {
    key: "getProducts",
    value: function getProducts() {
      var xhr = new XMLHttpRequest();
      xhr.open('GET', "http://".concat(window.location.host, "/api/products.json"), false);

      try {
        xhr.send();

        if (xhr.status == 200) {
          var _JSON$parse = JSON.parse(xhr.response),
              products = _JSON$parse.products;

          return products;
        } else {
          console.log("Error ".concat(xhr.status, ": ").concat(xhr.statusText));
        }
      } catch (err) {
        console.log(err);
        alert('Falha ao carregar os dados.');
      }
    }
  }, {
    key: "listBuilder",
    value: function listBuilder(listProducts) {
      var _this2 = this;

      var productContainer = document.getElementsByClassName('list-products')[0];
      var formatedProduct = '';
      listProducts.map(function (product) {
        formatedProduct += _this2.productBuilder(product);
      });
      productContainer.innerHTML = '';
      productContainer.insertAdjacentHTML('beforeend', formatedProduct);
    }
  }, {
    key: "productBuilder",
    value: function productBuilder(product) {
      var template = "<li>\n\t\t\t<a class=\"box-img\" href=\"javascript:void(0);\" title=\"".concat(product.name, "\">\n\t\t\t\t<img src=\"").concat(product.image, "\" alt=\"").concat(product.name, "\"/>\n\t\t\t</a>\n\t\t\t<strong class=\"tt-product-name\">\n\t\t\t\t<a href=\"javascript:void(0);\" title=\"").concat(product.name, "\">").concat(product.name, "</a>\n\t\t\t</strong>\n\t\t\t<strong class=\"tt-product-price\">\n\t\t\t\t<a href=\"javascript:void(0);\" title=\"Product\">R$ ").concat(product.price, "</a>\n\t\t\t</strong>\n\t\t</li>");
      return template;
    }
  }]);

  return App;
}();

exports["default"] = App;
new App();

},{"../src/materials/components/header/header.js":2}],2:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Header = function Header() {
  _classCallCheck(this, Header);

  var btnCollapse = document.getElementsByClassName('btn-collapse')[0],
      header = document.querySelector('header'),
      overlay = document.getElementsByClassName('overlay')[0],
      btnCloseCollapse = document.getElementsByClassName('btn-close-collapse')[0];
  btnCollapse.addEventListener('click', function () {
    header.classList.add('show');
    overlay.classList.add('show');
  });
  btnCloseCollapse.addEventListener('click', function () {
    header.classList.remove('show');
    overlay.classList.remove('show');
  });
};

exports["default"] = Header;

},{}]},{},[1]);
